#!/bin/bash

# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -eou pipefail

KUBECONFIG="${KUBECONFIG:-${HOME}/.kube/config}"
KUBECTX="${HOME}/.kube/kubectx"

function usage {
	cat <<"EOF"
USAGE:
  kubectx               : list the contexts
  kubectx <NAME>        : switch to context
  kubectx -             : switch to the previous context
  kubectx -h|--help     : show this message
EOF
}

function list_contexts {
	set -u pipefail
	kubectl config get-contexts | awk '{print $2}' | tail -n +2
}

function read_context {
	if [[ -f "$KUBECTX" ]]; then
		cat "$KUBECTX"
	fi
}

function save_context {
	local prev="$(read_context)"
	if [[ "$prev" != "$1" ]]; then
		printf %s "$1" > "$KUBECTX"
	fi
}

function switch_context {
	kubectl config use-context "$1"
}

function set_context {
	set -e
	local prev="$(kubectl config current-context)"

	switch_context "$1"

	if [[ -n "$prev" ]]; then
		save_context "$prev"
	fi
}

function swap_context {
	set -e
	local ctx="$(read_context)"
	if [[ -z "$ctx" ]]; then
		echo "No previous context found."
		exit 1
	fi
	set_context "$ctx"
}

if [[ "$#" -eq 0 ]]; then
	list_contexts
elif [[ "$#" -eq 1 ]]; then
	if [[ "$1" = '-h' || "$1" = '--help' ]]; then
		usage
	elif [[ "$1" = "-" ]]; then
		swap_context
	else
		set_context "$1"
	fi
else
	usage
fi
